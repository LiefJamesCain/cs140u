your name:---- liam beckman (G03891154)
date: -------- 24 october 2016 monday
Lab number: -- 5


Find the answers, using awk, for the following statements; you will get extra points for each correct answer. Points will be given only if 100% correct. These awk commands are just one line long each.

DO NOT SHARE YOUR ANSWERS, THIS IS EXTRA CREDIT, THAT MEANS INDIVIDUAL EFFORT. You have 2 hours to complete this task or complete it prior to the official lab meeting and upload your answers to the "Lab 5 submission" dropbox.

Hint: you may consult your notes and the Web if necessary.

You will be doing your awk searches on a file called longfile and winelist. To obtain these files use the command:

yourid@syccuxfs01:~> cp ~wmorales/awkexercise/longfile ~ 

and

yourid@syccuxfs01:~> cp ~wmorales/awkexercise/winelist ~    (there is a space before ~, remember ~ is your home directory)
		
This will copy the two files that you will need for this exercise to your home directory.


-----------------------------------------
-----------------------------------------

(3 points - easy)

1)Using awk, write the command that would print the line that contains the word "selected". This file has a lot of junk in it, so you are just searching for the lines that contain the word selected (there will be only one). Your awk script will look into the file called longfile and once it finds all the lines that contain the word "selected" it will display the line output that should be:

output: (There should be only one line)

server, or at least to a "randomly" selected one of the servers covering

 

YOUR AWK COMMAND:

gawk '/selected/' longfile
 
-----------------------------------------
-----------------------------------------

(10 points hard one)

 

2) Write the command that would find all lines that have an email address and place a label email = before the line in the file longfile

 

output will multiple lines similar to this one :

 

email= Message-Id: 199801232015.MAA21444@mail-gw2.pacbell.net

 

NOTE: this will be a long listing. The line above would not be a good example since 199801232015.MAA21444@mail-gw2.pacbell.netwould not be a valid email address. You would be searching for lines with the words from: to: Cc:, usually after these characters, there could be a good, valid e-mail address.

 

YOUR AWK COMMAND:

gawk {print "email= "} '/from:, to:, Cc:/' longfile
 
-----------------------------------------
-----------------------------------------

(3 points - easy)

 

3)Write the awk command that would show the user wmorales (or yourself) that is online (you have to use a pipe)

 

Output, depending on the system, would be similar to:

 

$ wmorales pts/0 192.220.32.72 4:18pm 0.00s 0.07s 0.02s w

 

YOUR AWK COMMAND:

who | gawk '/wmorales/'

-----------------------------------------
-----------------------------------------

(10 points hard one) -

 
r
4) finger the users on our system that have the letter r in their first name, or last name, but nowhere else. Note also that the r can be r or R.

 The output of the finger command has changed, so, this will be a bit more difficult to get it done. So, I am looking for the use field search. This might give you some ideas 

https://www.gnu.org/software/gawk/manual/html_node/Field-Separators.html

Look at how to use field separators

Output would be similar to:

 

tring Tong Ring 4 church (helix.cse.ogi.edu)

tzhou Roger Ring 0:15 p2 helix (zephyr.cse.ogi.e)

zab Rachu Brown 1:40 p7 bogart (sampo.grumblesmu)

 

note: the letter r or R has to appear either in their first name or last name only, not on the name of the machine that they are using if it happen to have r in it.

 

YOUR AWK COMMAND:

finger | gawk '$2 ~ /[rR]/ && $3 !~ /[rR]/ {print $1, $2, $6, $4, $3} 

users | grep [rR] | finger -l

-----------------------------------------
----------------------------------------- 

5) (3 points - easy)

 

from the file called winelist extract a list of wines that cost less then $7.00

 

output (it may be different depending the time you do it):

 

1977 6.99 Franciscan

1977 6.75 Alexander Valley

1977 5.99 Charles Krug

 

YOUR AWK COMMAND:

gawk '$2 < 7.00' winelist